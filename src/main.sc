require: city/city.sc
    module = sys.zb-common

require: slotfilling/slotFilling.sc
    module = sys.zb-common

require: dateTime/moment.min.js
    module = sys.zb-common

require: dicts/response.yaml
    var = response
  
require: dicts/tokenCall.yaml
    var = configTokenCall

require: dicts/configGoogle.yaml
    var = configGoogle
    
require: dicts/locality.yaml
    var = geo

require: dicts/firstName.yaml
    var = userName
    

require: js/functions.js
require: scenarios/bookingCalls.sc
require: scenarios/1_start.sc
require: scenarios/2_name.sc
require: scenarios/3_citizenship.sc
require: scenarios/4_region.sc
require: scenarios/5_amountOfDebt.sc
require: scenarios/6_debtComposition.sc
require: scenarios/7_credit.sc
require: scenarios/8_property.sc
require: scenarios/10_businessDeal.sc
require: scenarios/9_work.sc
require: scenarios/11_bankruptcy.sc
require: scenarios/12_resettingTheCall.sc
require: scenarios/analytics.sc
require: scenarios/bookingCalls.sc





init: 
    $global.$ = {
        __noSuchProperty__: function(property) {
            return $jsapi.context()[property];
        }
    };



    bind("preProcess", function($context) {
        /* —Ñ–∏–∫—Å–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤, –ø–æ—Å–∫–æ–ª—å–∫—É session.transitionsHistory –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
        –≤ $session.intentsTransitions —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å—Ç–µ–π—Ç—ã —Å –∏–Ω—Ç–µ–Ω—Ç–∞–º–∏,
        –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –†–µ–ø–ª–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏
        "—Å–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç–µ–π—Ç—ã" /SlotFilling –∏ /Switch –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ */
        $context.session.history = $context.session.history || [];
        if (!$context.currentState.startsWith("/SlotFilling") && !$context.currentState.startsWith("/Switch")) {
            $context.session.request = $context.request.query;
        }
    });



    bind("preMatch", function($context) {
        if (!_.isEmpty($context.request.query)){
            fixMillionThousand($context)
        }

    });



    /* –û–±—Ä–±–æ—Ç—á–∏–∫ onScriptError */
    bind("onScriptError", function($context) {
        log('[+++] üß†üß†üß† onScriptError = ' + toPrettyString($context.exception.message));
        $dialer.hangUp();
    });





# TODO –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –æ—à–∏–±–æ–∫, –∫–æ–≥–¥–∞ –º—ã –Ω–µ –¥–æ–∑–≤–æ–Ω–∏–ª–∏—Å—å
theme: /

    # –ï—Å–ª–∏ –ø–æ–ª–æ–∂–∏–ª–∏ —Ç—Ä—É–±–∫—É
    state: ClientHangUp
        event!: hangup
        script: 
        go!: /Analytics
